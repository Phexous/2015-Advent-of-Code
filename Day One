using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Day_One
{
    class Program
    {

        static void Main(string[] args)
        {
            //THIS IS WHERE MY CODE STARTS

            //Part 1

            //Using a text file as our input for the problem (Text file is saved in solution folder)
            string Input = System.IO.File.ReadAllText (@"C:\Users\Admin\Documents\Visual Studio 2017\Projects\Advent of Code 2015\Day One\Input.txt");

            Console.WriteLine("The length of your input string is " + Input.Length); //test to see the length of the string

            //define two intagers for later use
            int firstNumber = 0;
            int secondNumber = 0;

            char[] Symbols1 = new char[1] { '(' }; //Create array definition for our up symbol
            char[] Symbols2 = new char[1] { ')' }; //Create array definition for our down symbol

            //Compare our arrays to our Input to get out numbers
            var numberOne = Input.ToCharArray().Where(c => Symbols1.Contains(c)); 
            var numberTwo = Input.ToCharArray().Where(c => Symbols2.Contains(c)); 

            //Print our numbers for review
            Console.WriteLine("up " + numberOne.Count());
            Console.WriteLine("down " + numberTwo.Count());

            //Change our int values to the values of up and down
            firstNumber = numberOne.Count();
            secondNumber = numberTwo.Count();
            //final math and print
            Console.WriteLine("final " + (firstNumber - secondNumber));
            Console.WriteLine("your total numbers added are " + (firstNumber + secondNumber));
            
            Console.WriteLine("");
            Console.WriteLine("Press the Enter key to continue");
            Console.ReadLine();

            //Part 2

            //create array to have all of string information as indavidual entries

            char[] inputArray = Input.ToCharArray();

            Console.WriteLine(inputArray.Length);
            int position = 0; //define the string position
            int i = 0; //define i
            int x = 0; //define x
            /*loop while i is still not nagative
             *need to raise and lower i while moving through the string to find the moment it becomes negative and document which position in the inputArray that it happened 
             */

            while(i >= 0)
            {

                if (inputArray[x] == '(')
                {
                    x++; //next location in array
                    i++; //advance while
                    position++; //advance postion
                }
                else if (inputArray[x] == ')')
                {
                    x++; //next locatoin in array
                    i--; //decrease while
                    position++; //advance position
                }
                else //failsafe
                {
                    Console.WriteLine("something broke");
                    i = -1;
                }

            }
            
            Console.WriteLine("the position of first entry is " + position);
            Console.WriteLine();
            Console.WriteLine("press enter to exit");
            Console.ReadLine();

            //THIS IS WHERE MY CODE ENDS

        }
    }
}
